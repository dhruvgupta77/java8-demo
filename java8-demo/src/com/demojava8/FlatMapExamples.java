package com.demojava8;

import java.util.Collection;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class FlatMapExamples {
    public static void main(String[] args) {

        //1
        List<List<String>> lst = Arrays.asList(
                Arrays.asList("a"),
                Arrays.asList("b"));
        System.out.println(lst);

        System.out.println(lst
                .stream()
                .flatMap(Collection::stream)
                .collect(Collectors.toList()));

        //2
        // flatMap() example, let's first create a list of list
        List<List> listOfListOfNumber = new ArrayList<>();
        listOfListOfNumber.add(Arrays.asList(2, 4));
        listOfListOfNumber.add(Arrays.asList(3, 9));
        listOfListOfNumber.add(Arrays.asList(4, 16));
        System.out.println("list of list : " + listOfListOfNumber);

        // let's use flatMap() to flatten this list into
        // list of integers i.e. 2,4,3,9,4,16
        List listOfIntegers = (List) listOfListOfNumber.stream()
                .flatMap( list -> list.stream())
                .collect(Collectors.toList());

        System.out.println("list of numbers generated by flatMap : " + listOfIntegers);


    }
}

